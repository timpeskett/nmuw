+=======================================================================+
|                           nmuw README file                            |
|                       Created by Tim Peskett                          |
|                         timpeskett@live.com                           |
+=======================================================================+

About
------
nmuw stands for Networked Multi-computer Unified Workspace. Essentially imagine that you have two (or more) networked computers and you want to have dual-monitor functionality but you can't move the monitors, this is an attempt to solve that. It stems from the use case of being in a school/university computer lab and having so many free computers around but not being able to have a multi-monitor setup.
nmuw currently runs only on linux and requires X11. Best results are obtained if the XTEST extension is also installed (in my experience it typically is).

How to use
------------
Download the source and compile. Start the server application on the machine that you wish to use as your 'main monitor'. The keyboard and mouse of this machine will be that which you use to send input to all the other machines.
After starting the application a window will possibly appear. CTRL+ALT+Q toggles this window off and on (so if it doesn't appear, press CTRL+ALT+Q). If CTRL+ALT+Q is not working, make sure that numlock and capslock and scroll lock are off, X11 is weird in the way it handles them.

This window should contain three main areas. 
--The top area should have three buttons which read "Connect", "Toggle", "Quit".
--The middle area should contain a large box with a smaller box inside of it which reads "Master". This small box that reads master represents the server machine (i.e the machine that you are using) and will henceforth be referred to as the master. When we add a client machine to our workspace it will appear here and we can move the machine around in the workspace to suit our needs (and hopefully reflect the machines physical spatial configuration).
--The bottom area should just list the current machines in the workspace. The highlighted window is the window with focus and pressing w and s should move up and down this list (w moves up, s moves down) to change the focus. This feature is slightly buggy.

Now that the server is started the client application can be started on another machine. Once the client is started, go back to the server application and press "Connect". A new window should appear and it will list all available clients (it can take 5-10 seconds to refresh so be patient if nothing appears at first). Click on the client that you just started and press the "Connect" button at the bottom.
A window representing that client machine should now appear next to the box that represents the Master machine (if it doesn't then try toggling the window off and on or moving the Master box around). You can now move this client (or master) monitor around to make the workspace how you want it. Note that there is a bug which allows the machines to come unconnected, I'm not sure what happens when the machines are left like this.

Your mouse is now on the master machine. Say that in the server window the client machine (which should read "1") is directly to the left of the Master machine. Now if you move your mouse all the way to the left of the master machine it should appear on the client machine and disappear on the master machine. Clicking on the client machine will now move focus to their and keyboard messages will be sent to the client machine.


Limitations
------------
This is similar to multiple monitors but there are some key differences.
--Because all the clients are actually seperate computers, windows cannot be moved between clients.
--If you are running the same user account and more than one machine, then web browser profiles kind of screw you over so you will need to make more than one profile to have the same browser open on different machines.
--Only 10 computers can be connected in the unified workspace at once. This is a soft-limit however and could potentially be changed very simply with some testing and optimization.
--Audio will only come from the computer that it is playing on. It's important to remember that all clients are actually their own machines, you're just controlling them as if they are multiple monitors.


How to compile
----------------
Download the source (probably done if you're reading this).
Go to the root directory of the source tree.

To build the client:
	--Change directory to client directory
	--make clean
	--make
	--executable file should now be in client directory named 'client'

	(in commands)
	cd client
	make clean
	make
	./client

To build the server
	--Change directory to server directory
	--make clean
	--make
	--executable file should now be in server directory named 'server'

	(in commands)
	cd server
	make clean
	make
	./server

Any significant problems feel free to email timpeskett@live.com. I'm not really actively maintaining this as I found out that linux will no longer be installed on the machines at my school. I may port it to windows in time. Note that this will not work on a VM (at least it won't in my experience, your mileage may vary) because VMs don't like you stealing the mouse.

Notes
------
If anybody ever feels like looking at or modifying the code... I am so so so so sorry. The terrible design stems from some weird decisions I made where I was going to make it cross-platform but then decided against it later on. I may get around to commenting all the files at some point. If anyone wants to modify this then please do email me (timpeskett@live.com) and I will be very sympathetic to your cause and am willing to modify/refactor code as you wish to make it easier for you. 
This application does actually work surprisingly well (in my experience) it's just not really too user-friendly.
